Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/a46e85b3cbad4cdc85e990802b45610f-pulp.mps -threads 12 -timeMode elapsed -branch -printingOptions all -solution /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/a46e85b3cbad4cdc85e990802b45610f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 5047 COLUMNS
At line 27341 RHS
At line 32384 BOUNDS
At line 35288 ENDATA
Problem MODEL has 5042 rows, 2903 columns and 14350 elements
Coin0008I MODEL read with 0 errors
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.04 seconds
Cgl0004I processed model has 4275 rows, 2903 columns (2903 integer (2903 of which binary)) and 13586 elements
Cbc0038I Initial state - 766 integers unsatisfied sum - 103.957
Cbc0038I Pass   1: (0.17 seconds) suminf.   77.48687 (754) obj. 710.015 iterations 950
Cbc0038I Pass   2: (0.20 seconds) suminf.   76.38993 (706) obj. 898.543 iterations 267
Cbc0038I Pass   3: (0.26 seconds) suminf.   64.21465 (711) obj. 2624.85 iterations 685
Cbc0038I Pass   4: (0.31 seconds) suminf.   62.49864 (692) obj. 2798 iterations 545
Cbc0038I Pass   5: (0.35 seconds) suminf.    1.80665 (47) obj. 6424.28 iterations 735
Cbc0038I Solution found of 6437.17
Cbc0038I Before mini branch and bound, 2049 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4275 rows 2903 columns, reduced to 4275 rows 854 columns - 50 fixed gives 3743, 723 - still too large
Cbc0038I Full problem 4275 rows 2903 columns, reduced to 3743 rows 716 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I Round again with cutoff of 5793.45
Cbc0038I Pass   6: (0.43 seconds) suminf.   77.48687 (754) obj. 710.015 iterations 0
Cbc0038I Pass   7: (0.45 seconds) suminf.   76.38993 (706) obj. 898.543 iterations 314
Cbc0038I Pass   8: (0.50 seconds) suminf.   56.04830 (691) obj. 2686.23 iterations 557
Cbc0038I Pass   9: (0.52 seconds) suminf.   55.23718 (681) obj. 2766.03 iterations 279
Cbc0038I Pass  10: (0.58 seconds) suminf.   47.52161 (114) obj. 4134.7 iterations 918
Cbc0038I Pass  11: (0.60 seconds) suminf.    1.96549 (20) obj. 4758 iterations 807
Cbc0038I Solution found of 4758
Cbc0038I Before mini branch and bound, 2084 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4275 rows 2903 columns, reduced to 4275 rows 819 columns - 8 fixed gives 4259, 811 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.60 seconds)
Cbc0038I Round again with cutoff of 3806.4
Cbc0038I Pass  12: (0.61 seconds) suminf.   77.48687 (754) obj. 710.015 iterations 0
Cbc0038I Pass  13: (0.63 seconds) suminf.   76.38993 (706) obj. 898.543 iterations 314
Cbc0038I Pass  14: (0.69 seconds) suminf.   56.04830 (691) obj. 2686.23 iterations 698
Cbc0038I Pass  15: (0.72 seconds) suminf.   55.23718 (681) obj. 2766.03 iterations 339
Cbc0038I Pass  16: (0.77 seconds) suminf.   41.29517 (696) obj. 3806.4 iterations 427
Cbc0038I Pass  17: (0.81 seconds) suminf.   27.00620 (744) obj. 3806.4 iterations 415
Cbc0038I Pass  18: (0.83 seconds) suminf.   13.43725 (44) obj. 3806.4 iterations 495
Cbc0038I Pass  19: (0.85 seconds) suminf.    5.71062 (30) obj. 3465.6 iterations 530
Cbc0038I Pass  20: (0.87 seconds) suminf.   11.96713 (31) obj. 3774.22 iterations 534
Cbc0038I Pass  21: (0.89 seconds) suminf.   11.17871 (29) obj. 3806.4 iterations 427
Cbc0038I Pass  22: (0.92 seconds) suminf.   11.01303 (679) obj. 3806.4 iterations 332
Cbc0038I Pass  23: (0.95 seconds) suminf.    7.73280 (33) obj. 3806.4 iterations 466
Cbc0038I Pass  24: (0.96 seconds) suminf.    0.51895 (8) obj. 3806.4 iterations 99
Cbc0038I Solution found of 3767.31
Cbc0038I Before mini branch and bound, 2081 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4275 rows 2903 columns, reduced to 4275 rows 822 columns - 4 fixed gives 4267, 818 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.96 seconds)
Cbc0038I Round again with cutoff of 2637.12
Cbc0038I Pass  25: (0.97 seconds) suminf.   77.48687 (754) obj. 710.015 iterations 0
Cbc0038I Pass  26: (0.99 seconds) suminf.   76.38993 (706) obj. 898.543 iterations 314
Cbc0038I Pass  27: (1.06 seconds) suminf.   58.49641 (696) obj. 2637.12 iterations 760
Cbc0038I Pass  28: (1.10 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 456
Cbc0038I Pass  29: (1.13 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 245
Cbc0038I Pass  30: (1.17 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 451
Cbc0038I Pass  31: (1.21 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 383
Cbc0038I Pass  32: (1.26 seconds) suminf.   57.41995 (716) obj. 2637.12 iterations 482
Cbc0038I Pass  33: (1.30 seconds) suminf.   57.41995 (716) obj. 2637.12 iterations 438
Cbc0038I Pass  34: (1.35 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 473
Cbc0038I Pass  35: (1.39 seconds) suminf.   57.09837 (759) obj. 2637.12 iterations 414
Cbc0038I Pass  36: (1.44 seconds) suminf.   58.49641 (696) obj. 2637.12 iterations 405
Cbc0038I Pass  37: (1.48 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 381
Cbc0038I Pass  38: (1.52 seconds) suminf.   57.41995 (716) obj. 2637.12 iterations 319
Cbc0038I Pass  39: (1.56 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 419
Cbc0038I Pass  40: (1.61 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 466
Cbc0038I Pass  41: (1.66 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 429
Cbc0038I Pass  42: (1.70 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 385
Cbc0038I Pass  43: (1.75 seconds) suminf.   57.41995 (716) obj. 2637.12 iterations 438
Cbc0038I Pass  44: (1.79 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 365
Cbc0038I Pass  45: (1.84 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 362
Cbc0038I Pass  46: (1.88 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 433
Cbc0038I Pass  47: (1.93 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 464
Cbc0038I Pass  48: (1.99 seconds) suminf.   61.39433 (759) obj. 2637.12 iterations 471
Cbc0038I Pass  49: (2.03 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 361
Cbc0038I Pass  50: (2.06 seconds) suminf.   56.91077 (759) obj. 2637.12 iterations 273
Cbc0038I Pass  51: (2.11 seconds) suminf.   28.41571 (758) obj. 2637.12 iterations 464
Cbc0038I Pass  52: (2.17 seconds) suminf.   18.13925 (681) obj. 2507.04 iterations 530
Cbc0038I Pass  53: (2.21 seconds) suminf.   19.14592 (707) obj. 2637.12 iterations 345
Cbc0038I Pass  54: (2.27 seconds) suminf.   18.44031 (692) obj. 2637.12 iterations 505
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2053 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4275 rows 2903 columns, reduced to 4275 rows 850 columns - 4 fixed gives 4267, 846 - still too large
Cbc0038I Mini branch and bound did not improve solution (2.27 seconds)
Cbc0038I After 2.27 seconds - Feasibility pump exiting with objective of 3767.31 - took 2.15 seconds
Cbc0012I Integer solution of 3767.3104 found by feasibility pump after 0 iterations and 0 nodes (2.27 seconds)
Cbc0038I Full problem 4275 rows 2903 columns, reduced to 4275 rows 804 columns - 4 fixed gives 4267, 800 - still too large
Cbc0013I At root node, 0 cuts changed objective from 0 to 0 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 3767.3104 best solution, best possible 0 (3.07 seconds)
Cbc0012I Integer solution of 3691.3595 found by DiveCoefficient after 922 iterations and 3 nodes (5.97 seconds)
Cbc0012I Integer solution of 3691.3595 found by heuristic after 1447 iterations and 4 nodes (5.97 seconds)
Cbc0010I After 100 nodes, 49 on tree, 3691.3595 best solution, best possible 503.06461 (15.20 seconds)
Cbc0012I Integer solution of 3689.6755 found by heuristic after 20552 iterations and 107 nodes (15.50 seconds)
Cbc0010I After 200 nodes, 105 on tree, 3689.6755 best solution, best possible 503.06461 (17.28 seconds)
Cbc0012I Integer solution of 2989.566 found by heuristic after 31917 iterations and 204 nodes (17.31 seconds)
Cbc0010I After 300 nodes, 130 on tree, 2989.566 best solution, best possible 503.06461 (18.94 seconds)
Cbc0010I After 400 nodes, 177 on tree, 2989.566 best solution, best possible 503.06461 (20.78 seconds)
Cbc0012I Integer solution of 2566.3987 found by heuristic after 63144 iterations and 420 nodes (21.05 seconds)
Cbc0012I Integer solution of 2464.563 found by heuristic after 73744 iterations and 491 nodes (21.33 seconds)
Cbc0010I After 500 nodes, 129 on tree, 2464.563 best solution, best possible 503.06461 (21.39 seconds)
Cbc0010I After 600 nodes, 144 on tree, 2464.563 best solution, best possible 503.06461 (23.10 seconds)
Cbc0012I Integer solution of 2398.195 found by heuristic after 99146 iterations and 624 nodes (23.49 seconds)
Cbc0012I Integer solution of 2392.1733 found by heuristic after 108316 iterations and 671 nodes (24.03 seconds)
Cbc0010I After 700 nodes, 150 on tree, 2392.1733 best solution, best possible 503.06461 (24.56 seconds)
Cbc0010I After 800 nodes, 168 on tree, 2392.1733 best solution, best possible 503.06461 (26.32 seconds)
Cbc0010I After 900 nodes, 186 on tree, 2392.1733 best solution, best possible 503.06461 (27.64 seconds)
Cbc0012I Integer solution of 2391.1533 found by heuristic after 150424 iterations and 900 nodes (27.65 seconds)
Cbc0012I Integer solution of 2294.2748 found by heuristic after 154733 iterations and 925 nodes (28.14 seconds)
Cbc0012I Integer solution of 1861.5542 found by heuristic after 158375 iterations and 947 nodes (28.68 seconds)
Cbc0010I After 1000 nodes, 58 on tree, 1861.5542 best solution, best possible 503.06461 (29.55 seconds)
Cbc0010I After 1100 nodes, 52 on tree, 1861.5542 best solution, best possible 503.06461 (30.79 seconds)
Cbc0010I After 1200 nodes, 38 on tree, 1861.5542 best solution, best possible 503.06461 (31.99 seconds)
Cbc0010I After 1300 nodes, 7 on tree, 1861.5542 best solution, best possible 971.58978 (33.05 seconds)
Cbc0010I After 1400 nodes, 2 on tree, 1861.5542 best solution, best possible 1294.0801 (35.79 seconds)
Cbc0030I Thread 0 used 120 times,  waiting to start 11.164183,  562 locks, 0.00451231 locked, 0.0026056767 waiting for locks
Cbc0030I Thread 1 used 131 times,  waiting to start 12.033907,  614 locks, 0.0052011013 locked, 0.00077748299 waiting for locks
Cbc0030I Thread 2 used 144 times,  waiting to start 12.919679,  685 locks, 0.0063545704 locked, 0.00056314468 waiting for locks
Cbc0030I Thread 3 used 119 times,  waiting to start 13.815493,  557 locks, 0.0050597191 locked, 0.0027520657 waiting for locks
Cbc0030I Thread 4 used 108 times,  waiting to start 14.706329,  513 locks, 0.0036826134 locked, 0.0026106834 waiting for locks
Cbc0030I Thread 5 used 117 times,  waiting to start 15.10386,  550 locks, 0.0051174164 locked, 0.00042009354 waiting for locks
Cbc0030I Thread 6 used 119 times,  waiting to start 15.477088,  561 locks, 0.004168272 locked, 0.00020313263 waiting for locks
Cbc0030I Thread 7 used 117 times,  waiting to start 16.643638,  542 locks, 0.0035459995 locked, 0.00013756752 waiting for locks
Cbc0030I Thread 8 used 108 times,  waiting to start 16.319478,  511 locks, 0.0059659481 locked, 0.00013685226 waiting for locks
Cbc0030I Thread 9 used 124 times,  waiting to start 17.122531,  585 locks, 0.0058064461 locked, 9.8228455e-05 waiting for locks
Cbc0030I Thread 10 used 123 times,  waiting to start 16.607846,  578 locks, 0.0039913654 locked, 0.004421711 waiting for locks
Cbc0030I Thread 11 used 123 times,  waiting to start 16.916803,  581 locks, 0.0063481331 locked, 0.0010590553 waiting for locks
Cbc0030I Main thread 31.56672 waiting for threads,  2980 locks, 0.0024485588 locked, 0.011183262 waiting for locks
Cbc0001I Search completed - best objective 1861.5542, took 256841 iterations and 1453 nodes (46.95 seconds)
Cbc0032I Strong branching done 16932 times (1254288 iterations), fathomed 62 nodes and fixed 286 variables
Cbc0035I Maximum depth 43, 149041 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.241 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.110 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.360 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.389 seconds)

Result - Optimal solution found

Objective value:                1861.55420000
Enumerated nodes:               1453
Total iterations:               256841
Time (CPU seconds):             273.76
Time (Wallclock seconds):       46.97

Option for printingOptions changed from normal to all
Total time (CPU seconds):       273.77   (Wallclock seconds):       47.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/245e77b8eed641c5a1941527cdc1b5c8-pulp.mps -threads 12 -timeMode elapsed -branch -printingOptions all -solution /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/245e77b8eed641c5a1941527cdc1b5c8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4338 COLUMNS
At line 23496 RHS
At line 27830 BOUNDS
At line 30325 ENDATA
Problem MODEL has 4333 rows, 2494 columns and 12332 elements
Coin0008I MODEL read with 0 errors
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.03 seconds
Cgl0004I processed model has 3675 rows, 2494 columns (2494 integer (2494 of which binary)) and 11677 elements
Cbc0038I Initial state - 657 integers unsatisfied sum - 104.08
Cbc0038I Pass   1: (0.11 seconds) suminf.  104.08030 (657) obj. 9.37412e-15 iterations 734
Cbc0038I Pass   2: (0.15 seconds) suminf.   63.62975 (653) obj. 2541.39 iterations 410
Cbc0038I Pass   3: (0.20 seconds) suminf.   60.90137 (625) obj. 2815.76 iterations 538
Cbc0038I Pass   4: (0.23 seconds) suminf.   38.43893 (615) obj. 4232.13 iterations 501
Cbc0038I Pass   5: (0.26 seconds) suminf.   37.50139 (600) obj. 4326.55 iterations 338
Cbc0038I Pass   6: (0.30 seconds) suminf.   31.37238 (606) obj. 5387.47 iterations 470
Cbc0038I Pass   7: (0.34 seconds) suminf.   30.80291 (595) obj. 5445.4 iterations 400
Cbc0038I Pass   8: (0.37 seconds) suminf.   25.28360 (597) obj. 6116.34 iterations 401
Cbc0038I Pass   9: (0.41 seconds) suminf.   24.98714 (590) obj. 6146.01 iterations 350
Cbc0038I Pass  10: (0.44 seconds) suminf.   24.98714 (590) obj. 6146.01 iterations 433
Cbc0038I Pass  11: (0.52 seconds) suminf.   15.52514 (48) obj. 19638.4 iterations 1017
Cbc0038I Pass  12: (0.56 seconds) suminf.   10.76776 (581) obj. 19441.4 iterations 453
Cbc0038I Pass  13: (0.58 seconds) suminf.   10.76776 (581) obj. 19441.4 iterations 229
Cbc0038I Pass  14: (0.62 seconds) suminf.    6.34255 (589) obj. 32376.2 iterations 610
Cbc0038I Pass  15: (0.65 seconds) suminf.    1.65160 (579) obj. 32589.5 iterations 322
Cbc0038I Pass  16: (0.66 seconds) suminf.    1.64589 (577) obj. 32590.1 iterations 28
Cbc0038I Pass  17: (0.69 seconds) suminf.    3.87041 (15) obj. 32822.2 iterations 414
Cbc0038I Pass  18: (0.71 seconds) suminf.    0.76217 (2) obj. 49180.4 iterations 816
Cbc0038I Solution found of 49142.3
Cbc0038I Rounding solution of 8227.32 is better than previous of 49142.3

Cbc0038I Before mini branch and bound, 1277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3675 rows 2494 columns, reduced to 3675 rows 1217 columns - 172 fixed gives 3046, 969 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.78 seconds)
Cbc0038I Round again with cutoff of 7404.59
Cbc0038I Pass  19: (0.78 seconds) suminf.  104.08030 (657) obj. 0 iterations 0
Cbc0038I Pass  20: (0.81 seconds) suminf.   65.94755 (654) obj. 2434.97 iterations 397
Cbc0038I Pass  21: (0.86 seconds) suminf.   63.22494 (627) obj. 2708.04 iterations 670
Cbc0038I Pass  22: (0.88 seconds) suminf.   18.86308 (74) obj. 4557.29 iterations 430
Cbc0038I Pass  23: (0.92 seconds) suminf.   17.11404 (578) obj. 4325.89 iterations 478
Cbc0038I Pass  24: (0.93 seconds) suminf.   17.33364 (68) obj. 4712.56 iterations 269
Cbc0038I Pass  25: (0.94 seconds) suminf.   18.82149 (74) obj. 7404.59 iterations 456
Cbc0038I Pass  26: (1.00 seconds) suminf.   17.11404 (578) obj. 7125.93 iterations 739
Cbc0038I Pass  27: (1.05 seconds) suminf.   20.30855 (600) obj. 7404.59 iterations 558
Cbc0038I Pass  28: (1.10 seconds) suminf.   16.27588 (623) obj. 7404.59 iterations 489
Cbc0038I Pass  29: (1.13 seconds) suminf.   16.27588 (623) obj. 7404.59 iterations 318
Cbc0038I Pass  30: (1.16 seconds) suminf.   15.44250 (607) obj. 7404.59 iterations 357
Cbc0038I Pass  31: (1.19 seconds) suminf.   15.31268 (588) obj. 7404.59 iterations 247
Cbc0038I Pass  32: (1.21 seconds) suminf.   15.31268 (588) obj. 7404.59 iterations 140
Cbc0038I Pass  33: (1.25 seconds) suminf.   16.50179 (623) obj. 7404.59 iterations 376
Cbc0038I Pass  34: (1.28 seconds) suminf.   15.90765 (611) obj. 7404.59 iterations 323
Cbc0038I Pass  35: (1.29 seconds) suminf.   15.90765 (611) obj. 7404.59 iterations 81
Cbc0038I Pass  36: (1.34 seconds) suminf.   16.93956 (623) obj. 7404.59 iterations 543
Cbc0038I Pass  37: (1.38 seconds) suminf.   16.93956 (623) obj. 7404.59 iterations 375
Cbc0038I Pass  38: (1.41 seconds) suminf.   16.08884 (592) obj. 7397.53 iterations 382
Cbc0038I Pass  39: (1.44 seconds) suminf.   16.01492 (590) obj. 7404.59 iterations 304
Cbc0038I Pass  40: (1.46 seconds) suminf.   16.01492 (590) obj. 7404.59 iterations 128
Cbc0038I Pass  41: (1.50 seconds) suminf.   17.11772 (624) obj. 7404.59 iterations 460
Cbc0038I Pass  42: (1.54 seconds) suminf.   16.75145 (617) obj. 7404.59 iterations 380
Cbc0038I Pass  43: (1.59 seconds) suminf.   18.90603 (606) obj. 7404.59 iterations 428
Cbc0038I Pass  44: (1.65 seconds) suminf.   17.76581 (578) obj. 7315.44 iterations 645
Cbc0038I Pass  45: (1.69 seconds) suminf.   17.82204 (48) obj. 7404.59 iterations 313
Cbc0038I Pass  46: (1.72 seconds) suminf.   16.18820 (577) obj. 6850.29 iterations 558
Cbc0038I Pass  47: (1.77 seconds) suminf.   18.38169 (108) obj. 7349.91 iterations 455
Cbc0038I Pass  48: (1.81 seconds) suminf.   17.85093 (620) obj. 7404.59 iterations 604
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1614 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.82 seconds)
Cbc0038I After 1.82 seconds - Feasibility pump exiting with objective of 8227.32 - took 1.75 seconds
Cbc0012I Integer solution of 8227.3214 found by feasibility pump after 0 iterations and 0 nodes (1.82 seconds)
Cbc0038I Full problem 3675 rows 2494 columns, reduced to 3675 rows 739 columns - 164 fixed gives 3191, 575 - still too large
Cbc0038I Full problem 3675 rows 2494 columns, reduced to 3191 rows 575 columns - too large
Cbc0013I At root node, 0 cuts changed objective from 0 to 0 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 8227.3214 best solution, best possible 0 (2.71 seconds)
Cbc0012I Integer solution of 7006.0153 found by DiveCoefficient after 1218 iterations and 5 nodes (4.04 seconds)
Cbc0012I Integer solution of 7006.0153 found by heuristic after 1707 iterations and 5 nodes (4.73 seconds)
Cbc0012I Integer solution of 5962.9779 found by DiveCoefficient after 1004 iterations and 4 nodes (4.92 seconds)
Cbc0012I Integer solution of 5962.9779 found by heuristic after 1800 iterations and 6 nodes (4.92 seconds)
Cbc0012I Integer solution of 4997.024 found by DiveCoefficient after 3700 iterations and 16 nodes (6.04 seconds)
Cbc0012I Integer solution of 4997.024 found by heuristic after 5001 iterations and 29 nodes (6.59 seconds)
Cbc0012I Integer solution of 4333.3777 found by DiveCoefficient after 3354 iterations and 13 nodes (6.86 seconds)
Cbc0012I Integer solution of 5846.3282 found by DiveCoefficient after 3872 iterations and 17 nodes (7.50 seconds)
Cbc0012I Integer solution of 4333.3777 found by heuristic after 8133 iterations and 59 nodes (7.59 seconds)
Cbc0010I After 100 nodes, 46 on tree, 4333.3777 best solution, best possible 459.68864 (8.85 seconds)
Cbc0010I After 200 nodes, 97 on tree, 4333.3777 best solution, best possible 459.68864 (9.56 seconds)
Cbc0010I After 300 nodes, 145 on tree, 4333.3777 best solution, best possible 459.68864 (11.26 seconds)
Cbc0010I After 400 nodes, 195 on tree, 4333.3777 best solution, best possible 459.68864 (13.46 seconds)
Cbc0010I After 500 nodes, 244 on tree, 4333.3777 best solution, best possible 459.68864 (15.72 seconds)
Cbc0010I After 600 nodes, 297 on tree, 4333.3777 best solution, best possible 459.68864 (17.34 seconds)
Cbc0012I Integer solution of 3911.0512 found by heuristic after 74335 iterations and 623 nodes (17.68 seconds)
Cbc0012I Integer solution of 3810.9718 found by heuristic after 80393 iterations and 645 nodes (17.95 seconds)
Cbc0012I Integer solution of 3711.5112 found by heuristic after 86784 iterations and 676 nodes (18.22 seconds)
Cbc0010I After 700 nodes, 302 on tree, 3711.5112 best solution, best possible 459.68864 (18.44 seconds)
Cbc0012I Integer solution of 3689.2116 found by heuristic after 91597 iterations and 707 nodes (18.49 seconds)
Cbc0010I After 800 nodes, 315 on tree, 3689.2116 best solution, best possible 459.68864 (20.11 seconds)
Cbc0010I After 900 nodes, 366 on tree, 3689.2116 best solution, best possible 459.68864 (22.50 seconds)
Cbc0010I After 1000 nodes, 414 on tree, 3689.2116 best solution, best possible 459.68864 (25.02 seconds)
Cbc0010I After 1100 nodes, 457 on tree, 3689.2116 best solution, best possible 459.68864 (27.17 seconds)
Cbc0010I After 1200 nodes, 507 on tree, 3689.2116 best solution, best possible 459.68864 (29.33 seconds)
Cbc0010I After 1300 nodes, 550 on tree, 3689.2116 best solution, best possible 459.68864 (30.74 seconds)
Cbc0012I Integer solution of 3410.7343 found by heuristic after 172435 iterations and 1310 nodes (30.84 seconds)
Cbc0012I Integer solution of 3349.9028 found by heuristic after 174217 iterations and 1323 nodes (30.93 seconds)
Cbc0010I After 1400 nodes, 567 on tree, 3349.9028 best solution, best possible 459.68864 (31.95 seconds)
Cbc0012I Integer solution of 3146.1126 found by heuristic after 187157 iterations and 1408 nodes (32.03 seconds)
Cbc0010I After 1500 nodes, 566 on tree, 3146.1126 best solution, best possible 459.68864 (32.93 seconds)
Cbc0012I Integer solution of 3126.9763 found by heuristic after 203565 iterations and 1505 nodes (33.01 seconds)
Cbc0010I After 1600 nodes, 583 on tree, 3126.9763 best solution, best possible 459.68864 (34.11 seconds)
Cbc0010I After 1700 nodes, 595 on tree, 3126.9763 best solution, best possible 459.68864 (35.29 seconds)
Cbc0010I After 1800 nodes, 608 on tree, 3126.9763 best solution, best possible 459.68864 (36.74 seconds)
Cbc0010I After 1900 nodes, 610 on tree, 3126.9763 best solution, best possible 459.68864 (37.96 seconds)
Cbc0010I After 2000 nodes, 613 on tree, 3126.9763 best solution, best possible 459.68864 (39.00 seconds)
Cbc0010I After 2100 nodes, 612 on tree, 3126.9763 best solution, best possible 459.68864 (39.87 seconds)
Cbc0010I After 2200 nodes, 613 on tree, 3126.9763 best solution, best possible 459.68864 (40.70 seconds)
Cbc0010I After 2300 nodes, 616 on tree, 3126.9763 best solution, best possible 459.68864 (41.48 seconds)
Cbc0010I After 2400 nodes, 621 on tree, 3126.9763 best solution, best possible 459.68864 (42.35 seconds)
Cbc0010I After 2500 nodes, 634 on tree, 3126.9763 best solution, best possible 459.68864 (43.27 seconds)
Cbc0010I After 2600 nodes, 639 on tree, 3126.9763 best solution, best possible 459.68864 (44.86 seconds)
Cbc0010I After 2700 nodes, 649 on tree, 3126.9763 best solution, best possible 459.68864 (46.05 seconds)
Cbc0010I After 2800 nodes, 639 on tree, 3126.9763 best solution, best possible 459.68864 (47.27 seconds)
Cbc0010I After 2900 nodes, 636 on tree, 3126.9763 best solution, best possible 459.68864 (48.62 seconds)
Cbc0010I After 3000 nodes, 625 on tree, 3126.9763 best solution, best possible 459.68864 (49.73 seconds)
Cbc0010I After 3100 nodes, 625 on tree, 3126.9763 best solution, best possible 459.68864 (51.01 seconds)
Cbc0012I Integer solution of 2806.7966 found by heuristic after 488777 iterations and 3143 nodes (51.38 seconds)
Cbc0010I After 3200 nodes, 289 on tree, 2806.7966 best solution, best possible 459.68864 (51.82 seconds)
Cbc0012I Integer solution of 2789.2178 found by heuristic after 500495 iterations and 3210 nodes (51.89 seconds)
Cbc0010I After 3300 nodes, 220 on tree, 2789.2178 best solution, best possible 459.68864 (52.44 seconds)
Cbc0010I After 3400 nodes, 180 on tree, 2789.2178 best solution, best possible 459.68864 (52.97 seconds)
Cbc0010I After 3500 nodes, 138 on tree, 2789.2178 best solution, best possible 459.68864 (53.32 seconds)
Cbc0010I After 3600 nodes, 89 on tree, 2789.2178 best solution, best possible 459.68864 (53.64 seconds)
Cbc0010I After 3700 nodes, 40 on tree, 2789.2178 best solution, best possible 459.68864 (53.92 seconds)
Cbc0010I After 3800 nodes, 17 on tree, 2789.2178 best solution, best possible 585.04933 (55.72 seconds)
Cbc0010I After 3900 nodes, 52 on tree, 2789.2178 best solution, best possible 585.04933 (57.72 seconds)
Cbc0010I After 4000 nodes, 49 on tree, 2789.2178 best solution, best possible 585.04933 (59.59 seconds)
Cbc0012I Integer solution of 2525.6306 found by heuristic after 626357 iterations and 4040 nodes (60.10 seconds)
Cbc0010I After 4100 nodes, 22 on tree, 2525.6306 best solution, best possible 605.24845 (61.58 seconds)
Cbc0010I After 4200 nodes, 11 on tree, 2525.6306 best solution, best possible 605.24845 (63.18 seconds)
Cbc0010I After 4300 nodes, 19 on tree, 2525.6306 best solution, best possible 605.24845 (66.77 seconds)
Cbc0010I After 4400 nodes, 17 on tree, 2525.6306 best solution, best possible 605.24845 (68.54 seconds)
Cbc0012I Integer solution of 2391.6411 found by heuristic after 706591 iterations and 4474 nodes (69.27 seconds)
Cbc0012I Integer solution of 2390.6156 found by heuristic after 707555 iterations and 4479 nodes (69.31 seconds)
Cbc0010I After 4500 nodes, 15 on tree, 2390.6156 best solution, best possible 605.24845 (69.53 seconds)
Cbc0010I After 4600 nodes, 10 on tree, 2390.6156 best solution, best possible 974.81274 (70.58 seconds)
Cbc0010I After 4700 nodes, 9 on tree, 2390.6156 best solution, best possible 1232.0501 (71.94 seconds)
Cbc0012I Integer solution of 2300.3318 found by heuristic after 758565 iterations and 4736 nodes (72.34 seconds)
Cbc0010I After 4800 nodes, 2 on tree, 2300.3318 best solution, best possible 1364.9191 (73.14 seconds)
Cbc0012I Integer solution of 2294.6722 found by heuristic after 780745 iterations and 4865 nodes (73.88 seconds)
Cbc0012I Integer solution of 2293.6467 found by heuristic after 781513 iterations and 4870 nodes (73.90 seconds)
Cbc0012I Integer solution of 2203.3629 found by heuristic after 784664 iterations and 4888 nodes (74.21 seconds)
Cbc0030I Thread 0 used 534 times,  waiting to start 2.1523867,  2509 locks, 0.033985376 locked, 0.017999172 waiting for locks
Cbc0030I Thread 1 used 499 times,  waiting to start 2.405777,  2341 locks, 0.054509401 locked, 0.013709068 waiting for locks
Cbc0030I Thread 2 used 390 times,  waiting to start 3.1191034,  1826 locks, 0.026209354 locked, 0.023438931 waiting for locks
Cbc0030I Thread 3 used 422 times,  waiting to start 2.9094901,  1940 locks, 0.020895481 locked, 0.0010080338 waiting for locks
Cbc0030I Thread 4 used 370 times,  waiting to start 4.2105763,  1720 locks, 0.013935804 locked, 0.014341116 waiting for locks
Cbc0030I Thread 5 used 397 times,  waiting to start 4.5024774,  1847 locks, 0.013691902 locked, 0.015794754 waiting for locks
Cbc0030I Thread 6 used 388 times,  waiting to start 4.6717234,  1816 locks, 0.019260406 locked, 0.0031514168 waiting for locks
Cbc0030I Thread 7 used 377 times,  waiting to start 4.5205169,  1763 locks, 0.022539377 locked, 0.0088989735 waiting for locks
Cbc0030I Thread 8 used 375 times,  waiting to start 5.4116669,  1764 locks, 0.018201351 locked, 0.031446934 waiting for locks
Cbc0030I Thread 9 used 379 times,  waiting to start 5.1296906,  1768 locks, 0.0262115 locked, 0.002001524 waiting for locks
Cbc0030I Thread 10 used 382 times,  waiting to start 5.7825704,  1785 locks, 0.022994757 locked, 0.0057542324 waiting for locks
Cbc0030I Thread 11 used 385 times,  waiting to start 6.0280995,  1799 locks, 0.022634506 locked, 0.00023341179 waiting for locks
Cbc0030I Main thread 69.743669 waiting for threads,  9909 locks, 0.011199951 locked, 0.044308424 waiting for locks
Cbc0001I Search completed - best objective 2203.3629, took 786685 iterations and 4898 nodes (74.46 seconds)
Cbc0032I Strong branching done 39774 times (2555232 iterations), fathomed 349 nodes and fixed 413 variables
Cbc0035I Maximum depth 50, 353202 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.198 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.263 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.299 seconds)

Result - Optimal solution found

Objective value:                2203.36290000
Enumerated nodes:               4898
Total iterations:               786685
Time (CPU seconds):             513.47
Time (Wallclock seconds):       74.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       513.48   (Wallclock seconds):       74.49

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/3339377f0df24c56b2476c67fa29ef03-pulp.mps -threads 12 -timeMode elapsed -branch -printingOptions all -solution /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/3339377f0df24c56b2476c67fa29ef03-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3644 COLUMNS
At line 19732 RHS
At line 23372 BOUNDS
At line 25467 ENDATA
Problem MODEL has 3639 rows, 2094 columns and 10356 elements
Coin0008I MODEL read with 0 errors
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.03 seconds
Cgl0004I processed model has 3087 rows, 2094 columns (2094 integer (2094 of which binary)) and 9807 elements
Cbc0038I Initial state - 551 integers unsatisfied sum - 103.492
Cbc0038I Pass   1: (0.09 seconds) suminf.  103.49151 (551) obj. 4.36287e-15 iterations 557
Cbc0038I Pass   2: (0.12 seconds) suminf.   74.42694 (549) obj. 2256.52 iterations 441
Cbc0038I Pass   3: (0.15 seconds) suminf.   70.90216 (523) obj. 2610.41 iterations 427
Cbc0038I Pass   4: (0.17 seconds) suminf.   48.89023 (515) obj. 4140.53 iterations 334
Cbc0038I Pass   5: (0.19 seconds) suminf.   47.27638 (498) obj. 4301.02 iterations 276
Cbc0038I Pass   6: (0.22 seconds) suminf.   33.69649 (499) obj. 5884.41 iterations 318
Cbc0038I Pass   7: (0.24 seconds) suminf.   32.54852 (482) obj. 5999.08 iterations 256
Cbc0038I Pass   8: (0.25 seconds) suminf.   22.15061 (71) obj. 7464.4 iterations 229
Cbc0038I Pass   9: (0.27 seconds) suminf.   14.46420 (469) obj. 7210.09 iterations 390
Cbc0038I Pass  10: (0.29 seconds) suminf.   15.54545 (144) obj. 7395.12 iterations 264
Cbc0038I Pass  11: (0.31 seconds) suminf.   17.84452 (70) obj. 28326.5 iterations 699
Cbc0038I Pass  12: (0.35 seconds) suminf.   11.92146 (466) obj. 27998.3 iterations 563
Cbc0038I Pass  13: (0.37 seconds) suminf.    3.87589 (93) obj. 28863.5 iterations 535
Cbc0038I Pass  14: (0.41 seconds) suminf.    2.56392 (457) obj. 28803.1 iterations 487
Cbc0038I Pass  15: (0.42 seconds) suminf.    6.62870 (16) obj. 29140.6 iterations 280
Cbc0038I Pass  16: (0.44 seconds) suminf.    0.00000 (0) obj. 46701 iterations 862
Cbc0038I Solution found of 46701
Cbc0038I Rounding solution of 9543.12 is better than previous of 46701

Cbc0038I Before mini branch and bound, 986 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3087 rows 2094 columns, reduced to 3087 rows 1108 columns - 153 fixed gives 2392, 840 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.49 seconds)
Cbc0038I Round again with cutoff of 8588.81
Cbc0038I Pass  17: (0.49 seconds) suminf.  103.49151 (551) obj. 0 iterations 0
Cbc0038I Pass  18: (0.58 seconds) suminf.   74.42694 (549) obj. 2256.52 iterations 469
Cbc0038I Pass  19: (0.62 seconds) suminf.   70.90216 (523) obj. 2610.41 iterations 428
Cbc0038I Pass  20: (0.67 seconds) suminf.   15.39185 (499) obj. 6217.38 iterations 874
Cbc0038I Pass  21: (0.70 seconds) suminf.   14.25057 (462) obj. 6332.18 iterations 383
Cbc0038I Pass  22: (0.74 seconds) suminf.   14.25057 (462) obj. 6332.18 iterations 416
Cbc0038I Pass  23: (0.78 seconds) suminf.   16.17483 (517) obj. 8588.81 iterations 673
Cbc0038I Pass  24: (0.81 seconds) suminf.   15.65816 (508) obj. 8588.81 iterations 326
Cbc0038I Pass  25: (0.82 seconds) suminf.   15.65816 (508) obj. 8588.81 iterations 99
Cbc0038I Pass  26: (0.91 seconds) suminf.   19.27420 (516) obj. 8588.81 iterations 397
Cbc0038I Pass  27: (0.95 seconds) suminf.   18.35825 (503) obj. 8588.81 iterations 357
Cbc0038I Pass  28: (0.97 seconds) suminf.   18.35825 (503) obj. 8588.81 iterations 208
Cbc0038I Pass  29: (1.01 seconds) suminf.   16.60118 (519) obj. 8588.81 iterations 447
Cbc0038I Pass  30: (1.05 seconds) suminf.   16.48144 (518) obj. 8588.81 iterations 361
Cbc0038I Pass  31: (1.07 seconds) suminf.   15.56387 (497) obj. 8588.81 iterations 248
Cbc0038I Pass  32: (1.09 seconds) suminf.   15.55914 (497) obj. 8588.81 iterations 197
Cbc0038I Pass  33: (1.12 seconds) suminf.   15.55914 (497) obj. 8588.81 iterations 160
Cbc0038I Pass  34: (1.15 seconds) suminf.   18.03340 (523) obj. 8588.81 iterations 400
Cbc0038I Pass  35: (1.17 seconds) suminf.   17.88713 (522) obj. 8588.81 iterations 311
Cbc0038I Pass  36: (1.19 seconds) suminf.   16.93128 (501) obj. 8588.81 iterations 111
Cbc0038I Pass  37: (1.20 seconds) suminf.   16.92922 (501) obj. 8588.81 iterations 86
Cbc0038I Pass  38: (1.21 seconds) suminf.   16.92922 (501) obj. 8588.81 iterations 114
Cbc0038I Pass  39: (1.24 seconds) suminf.   18.67650 (527) obj. 8588.81 iterations 340
Cbc0038I Pass  40: (1.26 seconds) suminf.   18.37831 (525) obj. 8588.81 iterations 312
Cbc0038I Pass  41: (1.28 seconds) suminf.   17.47597 (503) obj. 8588.81 iterations 136
Cbc0038I Pass  42: (1.30 seconds) suminf.   17.47247 (503) obj. 8588.81 iterations 121
Cbc0038I Pass  43: (1.31 seconds) suminf.   17.47247 (503) obj. 8588.81 iterations 82
Cbc0038I Pass  44: (1.34 seconds) suminf.   18.48874 (525) obj. 8588.81 iterations 399
Cbc0038I Pass  45: (1.38 seconds) suminf.   18.48874 (525) obj. 8588.81 iterations 313
Cbc0038I Pass  46: (1.40 seconds) suminf.   12.44904 (522) obj. 8588.81 iterations 194
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1364 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.40 seconds)
Cbc0038I After 1.40 seconds - Feasibility pump exiting with objective of 9543.12 - took 1.22 seconds
Cbc0012I Integer solution of 9543.1211 found by feasibility pump after 0 iterations and 0 nodes (1.40 seconds)
Cbc0038I Full problem 3087 rows 2094 columns, reduced to 3087 rows 647 columns - 198 fixed gives 2481, 449 - still too large
Cbc0038I Full problem 3087 rows 2094 columns, reduced to 2481 rows 449 columns - too large
Cbc0013I At root node, 0 cuts changed objective from 0 to 0 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 9543.1211 best solution, best possible 0 (2.19 seconds)
Cbc0012I Integer solution of 4726.0144 found by DiveCoefficient after 565 iterations and 2 nodes (3.48 seconds)
Cbc0012I Integer solution of 4726.0144 found by heuristic after 681 iterations and 3 nodes (3.48 seconds)
Cbc0012I Integer solution of 4711.7446 found by DiveCoefficient after 4000 iterations and 21 nodes (6.60 seconds)
Cbc0012I Integer solution of 4711.7446 found by heuristic after 5553 iterations and 31 nodes (6.60 seconds)
Cbc0010I After 100 nodes, 50 on tree, 4711.7446 best solution, best possible 378.63868 (9.51 seconds)
Cbc0012I Integer solution of 4107.965 found by heuristic after 18841 iterations and 120 nodes (9.96 seconds)
Cbc0010I After 200 nodes, 98 on tree, 4107.965 best solution, best possible 378.63868 (12.29 seconds)
Cbc0010I After 300 nodes, 148 on tree, 4107.965 best solution, best possible 378.63868 (15.05 seconds)
Cbc0010I After 400 nodes, 199 on tree, 4107.965 best solution, best possible 378.63868 (17.01 seconds)
Cbc0010I After 500 nodes, 221 on tree, 4107.965 best solution, best possible 378.63868 (18.63 seconds)
Cbc0010I After 600 nodes, 254 on tree, 4107.965 best solution, best possible 378.63868 (20.87 seconds)
Cbc0012I Integer solution of 3735.1637 found by heuristic after 101726 iterations and 658 nodes (22.14 seconds)
Cbc0010I After 700 nodes, 295 on tree, 3735.1637 best solution, best possible 378.63868 (22.85 seconds)
Cbc0012I Integer solution of 3710.2871 found by heuristic after 109536 iterations and 705 nodes (22.98 seconds)
Cbc0012I Integer solution of 3304.7824 found by heuristic after 111566 iterations and 723 nodes (23.21 seconds)
Cbc0010I After 800 nodes, 295 on tree, 3304.7824 best solution, best possible 378.63868 (24.62 seconds)
Cbc0010I After 900 nodes, 314 on tree, 3304.7824 best solution, best possible 378.63868 (26.87 seconds)
Cbc0010I After 1000 nodes, 325 on tree, 3304.7824 best solution, best possible 378.63868 (28.88 seconds)
Cbc0010I After 1100 nodes, 331 on tree, 3304.7824 best solution, best possible 378.63868 (30.69 seconds)
Cbc0010I After 1200 nodes, 338 on tree, 3304.7824 best solution, best possible 378.63868 (31.90 seconds)
Cbc0012I Integer solution of 3026.411 found by heuristic after 209110 iterations and 1239 nodes (32.37 seconds)
Cbc0010I After 1300 nodes, 214 on tree, 3026.411 best solution, best possible 378.63868 (32.94 seconds)
Cbc0010I After 1400 nodes, 179 on tree, 3026.411 best solution, best possible 378.63868 (33.75 seconds)
Cbc0010I After 1500 nodes, 142 on tree, 3026.411 best solution, best possible 378.63868 (34.57 seconds)
Cbc0010I After 1600 nodes, 99 on tree, 3026.411 best solution, best possible 378.63868 (34.93 seconds)
Cbc0010I After 1700 nodes, 49 on tree, 3026.411 best solution, best possible 378.63868 (35.15 seconds)
Cbc0010I After 1800 nodes, 22 on tree, 3026.411 best solution, best possible 378.63868 (36.89 seconds)
Cbc0010I After 1900 nodes, 67 on tree, 3026.411 best solution, best possible 378.63868 (39.29 seconds)
Cbc0012I Integer solution of 2804.002 found by heuristic after 304584 iterations and 1989 nodes (40.19 seconds)
Cbc0010I After 2000 nodes, 73 on tree, 2804.002 best solution, best possible 378.63868 (40.36 seconds)
Cbc0012I Integer solution of 2525.6306 found by heuristic after 305861 iterations and 2001 nodes (40.38 seconds)
Cbc0010I After 2100 nodes, 23 on tree, 2525.6306 best solution, best possible 378.63868 (41.14 seconds)
Cbc0010I After 2200 nodes, 13 on tree, 2525.6306 best solution, best possible 830.29684 (42.85 seconds)
Cbc0010I After 2300 nodes, 24 on tree, 2525.6306 best solution, best possible 830.29684 (44.23 seconds)
Cbc0010I After 2400 nodes, 1 on tree, 2525.6306 best solution, best possible 830.29684 (44.93 seconds)
Cbc0010I After 2500 nodes, 13 on tree, 2525.6306 best solution, best possible 1349.4717 (47.61 seconds)
Cbc0010I After 2600 nodes, 1 on tree, 2525.6306 best solution, best possible 2414.4791 (48.52 seconds)
Cbc0030I Thread 0 used 244 times,  waiting to start 0.83917236,  1139 locks, 0.012183428 locked, 0.011365175 waiting for locks
Cbc0030I Thread 1 used 226 times,  waiting to start 1.8976481,  1055 locks, 0.01162672 locked, 0.0091834068 waiting for locks
Cbc0030I Thread 2 used 233 times,  waiting to start 2.4755459,  1094 locks, 0.0098702908 locked, 0.011249781 waiting for locks
Cbc0030I Thread 3 used 224 times,  waiting to start 2.8791101,  1052 locks, 0.010066509 locked, 0.0012450218 waiting for locks
Cbc0030I Thread 4 used 215 times,  waiting to start 3.0511851,  1011 locks, 0.0078976154 locked, 0.0057358742 waiting for locks
Cbc0030I Thread 5 used 225 times,  waiting to start 3.6974554,  1053 locks, 0.021157026 locked, 0.0074491501 waiting for locks
Cbc0030I Thread 6 used 206 times,  waiting to start 3.8349714,  967 locks, 0.0079782009 locked, 0.020537138 waiting for locks
Cbc0030I Thread 7 used 218 times,  waiting to start 4.774765,  1027 locks, 0.0094735622 locked, 0.0033972263 waiting for locks
Cbc0030I Thread 8 used 201 times,  waiting to start 5.2526183,  956 locks, 0.010371923 locked, 0.005243063 waiting for locks
Cbc0030I Thread 9 used 203 times,  waiting to start 4.8789086,  947 locks, 0.011395931 locked, 0.027698517 waiting for locks
Cbc0030I Thread 10 used 204 times,  waiting to start 5.1053355,  965 locks, 0.01185298 locked, 0.010152102 waiting for locks
Cbc0030I Thread 11 used 203 times,  waiting to start 4.9856997,  954 locks, 0.015402555 locked, 0.0067362785 waiting for locks
Cbc0030I Main thread 43.898804 waiting for threads,  5265 locks, 0.0053815842 locked, 0.030860424 waiting for locks
Cbc0001I Search completed - best objective 2525.6306, took 402405 iterations and 2602 nodes (48.53 seconds)
Cbc0032I Strong branching done 24784 times (1857097 iterations), fathomed 328 nodes and fixed 171 variables
Cbc0035I Maximum depth 25, 246260 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.120 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.191 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.228 seconds)

Result - Optimal solution found

Objective value:                2525.63060000
Enumerated nodes:               2602
Total iterations:               402405
Time (CPU seconds):             327.73
Time (Wallclock seconds):       48.54

Option for printingOptions changed from normal to all
Total time (CPU seconds):       327.74   (Wallclock seconds):       48.56

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/e50965c7b4b247a49da2c16388bc2248-pulp.mps -threads 12 -timeMode elapsed -branch -printingOptions all -solution /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/e50965c7b4b247a49da2c16388bc2248-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2966 COLUMNS
At line 16054 RHS
At line 19016 BOUNDS
At line 20721 ENDATA
Problem MODEL has 2961 rows, 1704 columns and 8424 elements
Coin0008I MODEL read with 0 errors
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.02 seconds
Cgl0004I processed model has 2511 rows, 1704 columns (1704 integer (1704 of which binary)) and 7977 elements
Cbc0038I Initial state - 449 integers unsatisfied sum - 101.428
Cbc0038I Pass   1: suminf.  101.42833 (449) obj. 1.38386e-12 iterations 525
Cbc0038I Pass   2: suminf.  101.42833 (449) obj. -2.90822e-13 iterations 316
Cbc0038I Pass   3: suminf.  100.51929 (448) obj. 9563.62 iterations 792
Cbc0038I Pass   4: suminf.  100.51929 (448) obj. 9563.62 iterations 477
Cbc0038I Pass   5: suminf.    7.84890 (92) obj. 13129.8 iterations 390
Cbc0038I Solution found of 13185.1
Cbc0038I Before mini branch and bound, 1111 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2511 rows 1704 columns, reduced to 2511 rows 593 columns - 66 fixed gives 1962, 441 - still too large
Cbc0038I Full problem 2511 rows 1704 columns, reduced to 1962 rows 441 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of 11866.6
Cbc0038I Pass   6: suminf.  101.42833 (449) obj. 0 iterations 0
Cbc0038I Pass   7: suminf.   86.71877 (449) obj. 1379.92 iterations 536
Cbc0038I Pass   8: suminf.   83.43544 (432) obj. 1710.23 iterations 370
Cbc0038I Pass   9: suminf.   71.77705 (440) obj. 3725.29 iterations 418
Cbc0038I Pass  10: suminf.   67.86194 (416) obj. 4118.08 iterations 346
Cbc0038I Pass  11: suminf.    5.54412 (76) obj. 6793.45 iterations 318
Cbc0038I Solution found of 6932.26
Cbc0038I Before mini branch and bound, 1181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2511 rows 1704 columns, reduced to 2511 rows 523 columns - 57 fixed gives 2111, 432 - still too large
Cbc0038I Full problem 2511 rows 1704 columns, reduced to 2111 rows 432 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I Round again with cutoff of 5545.8
Cbc0038I Pass  12: suminf.  101.42833 (449) obj. 0 iterations 0
Cbc0038I Pass  13: suminf.   86.71877 (449) obj. 1379.92 iterations 534
Cbc0038I Pass  14: suminf.   83.43544 (432) obj. 1710.23 iterations 371
Cbc0038I Pass  15: suminf.   50.60252 (428) obj. 4209.18 iterations 556
Cbc0038I Pass  16: suminf.   47.05561 (398) obj. 4544.25 iterations 542
Cbc0038I Pass  17: suminf.   32.77202 (400) obj. 5545.8 iterations 111
Cbc0038I Pass  18: suminf.   31.37112 (404) obj. 5545.8 iterations 267
Cbc0038I Pass  19: suminf.   30.53514 (398) obj. 5545.8 iterations 31
Cbc0038I Pass  20: suminf.   30.53514 (398) obj. 5545.8 iterations 143
Cbc0038I Pass  21: suminf.   35.74523 (446) obj. 5545.8 iterations 378
Cbc0038I Pass  22: suminf.   35.43285 (441) obj. 5545.8 iterations 252
Cbc0038I Pass  23: suminf.   33.93327 (420) obj. 5545.8 iterations 121
Cbc0038I Pass  24: suminf.   33.92499 (420) obj. 5545.8 iterations 92
Cbc0038I Pass  25: suminf.   32.49657 (414) obj. 5545.8 iterations 88
Cbc0038I Pass  26: suminf.   32.22583 (411) obj. 5545.8 iterations 78
Cbc0038I Pass  27: suminf.   31.49927 (406) obj. 5545.8 iterations 13
Cbc0038I Pass  28: suminf.   31.49927 (406) obj. 5545.8 iterations 89
Cbc0038I Pass  29: suminf.   34.21841 (438) obj. 5545.8 iterations 339
Cbc0038I Pass  30: suminf.   33.69864 (434) obj. 5545.8 iterations 305
Cbc0038I Pass  31: suminf.   33.69864 (434) obj. 5545.8 iterations 77
Cbc0038I Pass  32: suminf.   37.04385 (440) obj. 5545.8 iterations 352
Cbc0038I Pass  33: suminf.   34.78106 (418) obj. 5545.8 iterations 332
Cbc0038I Pass  34: suminf.   34.78106 (418) obj. 5545.8 iterations 10
Cbc0038I Pass  35: suminf.   34.78106 (418) obj. 5545.8 iterations 124
Cbc0038I Pass  36: suminf.   36.70306 (436) obj. 5545.8 iterations 297
Cbc0038I Pass  37: suminf.   36.57516 (436) obj. 5545.8 iterations 257
Cbc0038I Pass  38: suminf.   35.59705 (428) obj. 5545.8 iterations 164
Cbc0038I Pass  39: suminf.   35.59389 (428) obj. 5545.8 iterations 148
Cbc0038I Pass  40: suminf.   28.72631 (430) obj. 5545.8 iterations 226
Cbc0038I Pass  41: suminf.   28.72631 (430) obj. 5545.8 iterations 168
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1152 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.88 seconds)
Cbc0038I After 0.88 seconds - Feasibility pump exiting with objective of 6932.26 - took 0.82 seconds
Cbc0012I Integer solution of 6932.2562 found by feasibility pump after 0 iterations and 0 nodes (0.88 seconds)
Cbc0038I Full problem 2511 rows 1704 columns, reduced to 2511 rows 518 columns - 57 fixed gives 2111, 432 - still too large
Cbc0038I Full problem 2511 rows 1704 columns, reduced to 2111 rows 432 columns - too large
Cbc0013I At root node, 0 cuts changed objective from 0 to 0 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 6932.2562 best solution, best possible 0 (1.33 seconds)
Cbc0012I Integer solution of 5434.7656 found by DiveCoefficient after 1039 iterations and 5 nodes (2.84 seconds)
Cbc0012I Integer solution of 5434.7656 found by heuristic after 1618 iterations and 7 nodes (2.84 seconds)
Cbc0012I Integer solution of 6815.7774 found by DiveCoefficient after 1823 iterations and 7 nodes (3.17 seconds)
Cbc0012I Integer solution of 3623.4134 found by DiveCoefficient after 1736 iterations and 8 nodes (3.17 seconds)
Cbc0012I Integer solution of 3623.4134 found by heuristic after 2060 iterations and 9 nodes (3.17 seconds)
Cbc0012I Integer solution of 3488.0118 found by DiveCoefficient after 6274 iterations and 40 nodes (5.48 seconds)
Cbc0012I Integer solution of 3488.0118 found by heuristic after 8045 iterations and 53 nodes (5.76 seconds)
Cbc0012I Integer solution of 3311.4379 found by heuristic after 13750 iterations and 99 nodes (7.27 seconds)
Cbc0010I After 100 nodes, 47 on tree, 3311.4379 best solution, best possible 777.34785 (7.27 seconds)
Cbc0010I After 200 nodes, 101 on tree, 3311.4379 best solution, best possible 777.34785 (7.68 seconds)
Cbc0010I After 300 nodes, 132 on tree, 3311.4379 best solution, best possible 777.34785 (8.31 seconds)
Cbc0012I Integer solution of 3123.3479 found by heuristic after 33088 iterations and 306 nodes (8.35 seconds)
Cbc0012I Integer solution of 3087.493 found by heuristic after 36901 iterations and 328 nodes (8.55 seconds)
Cbc0012I Integer solution of 2988.1168 found by heuristic after 36938 iterations and 329 nodes (8.55 seconds)
Cbc0012I Integer solution of 2884.2794 found by heuristic after 37957 iterations and 341 nodes (8.59 seconds)
Cbc0012I Integer solution of 2794.3342 found by heuristic after 42375 iterations and 369 nodes (8.82 seconds)
Cbc0010I After 400 nodes, 81 on tree, 2794.3342 best solution, best possible 777.34785 (8.96 seconds)
Cbc0012I Integer solution of 2596.8404 found by heuristic after 59766 iterations and 493 nodes (10.00 seconds)
Cbc0010I After 500 nodes, 67 on tree, 2596.8404 best solution, best possible 777.34785 (10.07 seconds)
Cbc0012I Integer solution of 2590.0872 found by heuristic after 66739 iterations and 532 nodes (10.45 seconds)
Cbc0012I Integer solution of 2377.7041 found by heuristic after 69085 iterations and 543 nodes (10.53 seconds)
Cbc0010I After 600 nodes, 24 on tree, 2377.7041 best solution, best possible 777.34785 (10.86 seconds)
Cbc0012I Integer solution of 2291.2407 found by heuristic after 85774 iterations and 659 nodes (11.61 seconds)
Cbc0010I After 700 nodes, 17 on tree, 2291.2407 best solution, best possible 777.34785 (12.09 seconds)
Cbc0010I After 800 nodes, 17 on tree, 2291.2407 best solution, best possible 1001.7923 (13.52 seconds)
Cbc0010I After 900 nodes, 1 on tree, 2291.2407 best solution, best possible 1374.162 (14.90 seconds)
Cbc0030I Thread 0 used 89 times,  waiting to start 0.48677659,  420 locks, 0.0019378662 locked, 0.0026345253 waiting for locks
Cbc0030I Thread 1 used 102 times,  waiting to start 0.97152376,  487 locks, 0.0029778481 locked, 0.0036268234 waiting for locks
Cbc0030I Thread 2 used 72 times,  waiting to start 2.1419919,  344 locks, 0.0018999577 locked, 3.5762787e-05 waiting for locks
Cbc0030I Thread 3 used 68 times,  waiting to start 1.8029618,  324 locks, 0.0026299953 locked, 0.0014891624 waiting for locks
Cbc0030I Thread 4 used 64 times,  waiting to start 2.2411809,  304 locks, 0.0012080669 locked, 0.0053532124 waiting for locks
Cbc0030I Thread 5 used 97 times,  waiting to start 2.1401939,  472 locks, 0.0072593689 locked, 0.0042288303 waiting for locks
Cbc0030I Thread 6 used 77 times,  waiting to start 2.6597972,  361 locks, 0.0052649975 locked, 0.00011563301 waiting for locks
Cbc0030I Thread 7 used 67 times,  waiting to start 3.2290621,  313 locks, 0.0011966228 locked, 3.6478043e-05 waiting for locks
Cbc0030I Thread 8 used 71 times,  waiting to start 3.2931812,  333 locks, 0.0023679733 locked, 0.0001950264 waiting for locks
Cbc0030I Thread 9 used 63 times,  waiting to start 3.5692148,  294 locks, 0.014047146 locked, 0.00019478798 waiting for locks
Cbc0030I Thread 10 used 74 times,  waiting to start 3.3882303,  341 locks, 0.0018177032 locked, 7.2717667e-05 waiting for locks
Cbc0030I Thread 11 used 93 times,  waiting to start 3.499145,  440 locks, 0.0040485859 locked, 4.5061111e-05 waiting for locks
Cbc0030I Main thread 12.643198 waiting for threads,  1931 locks, 0.0011057854 locked, 0.01232481 waiting for locks
Cbc0001I Search completed - best objective 2291.2407, took 137750 iterations and 937 nodes (15.49 seconds)
Cbc0032I Strong branching done 8638 times (620256 iterations), fathomed 132 nodes and fixed 88 variables
Cbc0035I Maximum depth 27, 44515 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.100 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.137 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.145 seconds)

Result - Optimal solution found

Objective value:                2291.24070000
Enumerated nodes:               937
Total iterations:               137750
Time (CPU seconds):             95.74
Time (Wallclock seconds):       15.50

Option for printingOptions changed from normal to all
Total time (CPU seconds):       95.75   (Wallclock seconds):       15.50

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/6c49c156455e4fe6b97f001bd23c5203-pulp.mps -threads 12 -timeMode elapsed -branch -printingOptions all -solution /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/6c49c156455e4fe6b97f001bd23c5203-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2219 COLUMNS
At line 12000 RHS
At line 14215 BOUNDS
At line 15492 ENDATA
Problem MODEL has 2214 rows, 1276 columns and 6292 elements
Coin0008I MODEL read with 0 errors
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.01 seconds
Cgl0004I processed model has 1873 rows, 1276 columns (1276 integer (1276 of which binary)) and 5954 elements
Cbc0038I Initial state - 340 integers unsatisfied sum - 98.5494
Cbc0038I Pass   1: suminf.   98.54935 (340) obj. 0 iterations 335
Cbc0038I Pass   2: suminf.   98.54935 (340) obj. 8.2277e-15 iterations 259
Cbc0038I Pass   3: suminf.   98.54935 (340) obj. 6964.04 iterations 658
Cbc0038I Pass   4: suminf.   97.02230 (340) obj. 7036.88 iterations 441
Cbc0038I Pass   5: suminf.   96.73694 (339) obj. 7065.97 iterations 14
Cbc0038I Pass   6: suminf.    0.91627 (102) obj. 10184.9 iterations 350
Cbc0038I Solution found of 10193
Cbc0038I Before mini branch and bound, 825 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1873 rows 1276 columns, reduced to 1873 rows 451 columns - 53 fixed gives 1354, 317 - still too large
Cbc0038I Full problem 1873 rows 1276 columns, reduced to 1354 rows 317 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of 9173.72
Cbc0038I Pass   7: suminf.   98.54935 (340) obj. 0 iterations 0
Cbc0038I Pass   8: suminf.    3.27950 (276) obj. 2483.73 iterations 440
Cbc0038I Pass   9: suminf.    2.98244 (251) obj. 2513.6 iterations 534
Cbc0038I Pass  10: suminf.    1.58439 (252) obj. 2687.32 iterations 169
Cbc0038I Pass  11: suminf.    1.57181 (250) obj. 2688.42 iterations 159
Cbc0038I Pass  12: suminf.    1.57181 (250) obj. 2688.42 iterations 323
Cbc0038I Pass  13: suminf.    0.67949 (268) obj. 9173.72 iterations 523
Cbc0038I Pass  14: suminf.    0.49985 (2) obj. 9173.72 iterations 384
Cbc0038I Solution found of 9078.94
Cbc0038I Rounding solution of 2899.98 is better than previous of 9078.94

Cbc0038I Before mini branch and bound, 839 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1873 rows 1276 columns, reduced to 1873 rows 437 columns - 11 fixed gives 1851, 426 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of 2319.98
Cbc0038I Pass  15: suminf.   98.54935 (340) obj. 0 iterations 0
Cbc0038I Pass  16: suminf.   12.68521 (285) obj. 2319.98 iterations 586
Cbc0038I Pass  17: suminf.    7.92956 (255) obj. 2288.21 iterations 492
Cbc0038I Pass  18: suminf.    8.21892 (257) obj. 2319.98 iterations 143
Cbc0038I Pass  19: suminf.    8.01971 (282) obj. 2319.98 iterations 403
Cbc0038I Pass  20: suminf.    7.40796 (280) obj. 2319.98 iterations 223
Cbc0038I Pass  21: suminf.    7.01026 (273) obj. 2243.63 iterations 288
Cbc0038I Pass  22: suminf.    6.52237 (254) obj. 2292.04 iterations 246
Cbc0038I Pass  23: suminf.    7.76924 (284) obj. 2319.98 iterations 219
Cbc0038I Pass  24: suminf.    7.14478 (277) obj. 2319.98 iterations 258
Cbc0038I Pass  25: suminf.    7.03706 (275) obj. 2319.98 iterations 204
Cbc0038I Pass  26: suminf.    7.03706 (275) obj. 2319.98 iterations 120
Cbc0038I Pass  27: suminf.    7.12158 (278) obj. 2319.98 iterations 259
Cbc0038I Pass  28: suminf.    7.11017 (277) obj. 2319.98 iterations 252
Cbc0038I Pass  29: suminf.    7.11017 (277) obj. 2319.98 iterations 191
Cbc0038I Pass  30: suminf.    7.11017 (277) obj. 2319.98 iterations 134
Cbc0038I Pass  31: suminf.    7.14475 (277) obj. 2319.98 iterations 222
Cbc0038I Pass  32: suminf.    7.14496 (277) obj. 2319.98 iterations 250
Cbc0038I Pass  33: suminf.    7.72461 (280) obj. 2319.98 iterations 249
Cbc0038I Pass  34: suminf.    6.52237 (254) obj. 2292.04 iterations 310
Cbc0038I Pass  35: suminf.    6.52237 (254) obj. 2292.04 iterations 223
Cbc0038I Pass  36: suminf.    7.17952 (278) obj. 2319.98 iterations 431
Cbc0038I Pass  37: suminf.    7.09096 (277) obj. 2319.98 iterations 268
Cbc0038I Pass  38: suminf.    7.09096 (277) obj. 2319.98 iterations 122
Cbc0038I Pass  39: suminf.    7.09799 (277) obj. 2319.98 iterations 261
Cbc0038I Pass  40: suminf.    7.09799 (277) obj. 2319.98 iterations 221
Cbc0038I Pass  41: suminf.    7.09799 (277) obj. 2319.98 iterations 57
Cbc0038I Pass  42: suminf.    7.09460 (277) obj. 2319.98 iterations 203
Cbc0038I Pass  43: suminf.    7.09460 (277) obj. 2319.98 iterations 214
Cbc0038I Pass  44: suminf.    7.09460 (277) obj. 2319.98 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 871 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1873 rows 1276 columns, reduced to 1873 rows 405 columns - 1 fixed gives 1871, 404 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.63 seconds)
Cbc0038I After 0.63 seconds - Feasibility pump exiting with objective of 2899.98 - took 0.59 seconds
Cbc0012I Integer solution of 2899.9805 found by feasibility pump after 0 iterations and 0 nodes (0.63 seconds)
Cbc0038I Full problem 1873 rows 1276 columns, reduced to 1873 rows 369 columns - 1 fixed gives 1871, 368 - still too large
Cbc0013I At root node, 0 cuts changed objective from 0 to 0 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 2899.9805 best solution, best possible 0 (0.97 seconds)
Cbc0012I Integer solution of 2899.7336 found by DiveCoefficient after 2481 iterations and 17 nodes (2.38 seconds)
Cbc0012I Integer solution of 2801.6388 found by DiveCoefficient after 2481 iterations and 17 nodes (2.55 seconds)
Cbc0012I Integer solution of 2801.6388 found by heuristic after 3468 iterations and 26 nodes (2.55 seconds)
Cbc0010I After 100 nodes, 31 on tree, 2801.6388 best solution, best possible 503.30966 (3.73 seconds)
Cbc0010I After 200 nodes, 9 on tree, 2801.6388 best solution, best possible 503.30966 (4.32 seconds)
Cbc0012I Integer solution of 2800.7243 found by heuristic after 26504 iterations and 210 nodes (4.39 seconds)
Cbc0012I Integer solution of 2597.4472 found by heuristic after 28108 iterations and 224 nodes (4.59 seconds)
Cbc0010I After 300 nodes, 15 on tree, 2597.4472 best solution, best possible 503.30966 (5.41 seconds)
Cbc0012I Integer solution of 2404.7108 found by heuristic after 47482 iterations and 352 nodes (5.86 seconds)
Cbc0010I After 400 nodes, 5 on tree, 2404.7108 best solution, best possible 756.58747 (6.71 seconds)
Cbc0010I After 500 nodes, 1 on tree, 2404.7108 best solution, best possible 756.58747 (7.93 seconds)
Cbc0030I Thread 0 used 57 times,  waiting to start 0.18487287,  276 locks, 0.001103878 locked, 3.695488e-05 waiting for locks
Cbc0030I Thread 1 used 46 times,  waiting to start 0.90714025,  218 locks, 0.0040974617 locked, 0.00101161 waiting for locks
Cbc0030I Thread 2 used 37 times,  waiting to start 1.1080658,  178 locks, 0.00069785118 locked, 8.8214874e-06 waiting for locks
Cbc0030I Thread 3 used 49 times,  waiting to start 1.3110569,  228 locks, 0.0009958744 locked, 0.0050845146 waiting for locks
Cbc0030I Thread 4 used 46 times,  waiting to start 1.6727939,  223 locks, 0.00071811676 locked, 0.0012154579 waiting for locks
Cbc0030I Thread 5 used 36 times,  waiting to start 1.8074887,  169 locks, 0.00064849854 locked, 0.00030231476 waiting for locks
Cbc0030I Thread 6 used 55 times,  waiting to start 1.9770131,  255 locks, 0.014247417 locked, 0.0019552708 waiting for locks
Cbc0030I Thread 7 used 40 times,  waiting to start 1.9833462,  191 locks, 0.00055003166 locked, 0.0002412796 waiting for locks
Cbc0030I Thread 8 used 43 times,  waiting to start 1.8073256,  202 locks, 0.0023684502 locked, 8.5353851e-05 waiting for locks
Cbc0030I Thread 9 used 33 times,  waiting to start 2.0119741,  155 locks, 0.00041866302 locked, 0.0024716854 waiting for locks
Cbc0030I Thread 10 used 27 times,  waiting to start 2.1844022,  128 locks, 0.00040864944 locked, 1.3828278e-05 waiting for locks
Cbc0030I Thread 11 used 38 times,  waiting to start 1.986907,  179 locks, 0.00073122978 locked, 0.0029683113 waiting for locks
Cbc0030I Main thread 5.9566433 waiting for threads,  1042 locks, 0.00025177002 locked, 0.002281189 waiting for locks
Cbc0001I Search completed - best objective 2404.7108, took 72570 iterations and 507 nodes (7.94 seconds)
Cbc0032I Strong branching done 5656 times (371354 iterations), fathomed 106 nodes and fixed 29 variables
Cbc0035I Maximum depth 20, 24061 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.091 seconds)

Result - Optimal solution found

Objective value:                2404.71080000
Enumerated nodes:               507
Total iterations:               72570
Time (CPU seconds):             45.74
Time (Wallclock seconds):       7.95

Option for printingOptions changed from normal to all
Total time (CPU seconds):       45.74   (Wallclock seconds):       7.95

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/a966ad41a2604260a7545d68eeea4b14-pulp.mps -threads 12 -timeMode elapsed -branch -printingOptions all -solution /var/folders/z3/3qb7cv41693fmz3b6hbntjkr0000gn/T/a966ad41a2604260a7545d68eeea4b14-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1609 COLUMNS
At line 8691 RHS
At line 10296 BOUNDS
At line 11222 ENDATA
Problem MODEL has 1604 rows, 925 columns and 4554 elements
Coin0008I MODEL read with 0 errors
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.01 seconds
Cgl0004I processed model has 1355 rows, 925 columns (925 integer (925 of which binary)) and 4308 elements
Cbc0038I Initial state - 248 integers unsatisfied sum - 97.4403
Cbc0038I Pass   1: suminf.   97.44028 (248) obj. 0 iterations 228
Cbc0038I Pass   2: suminf.   97.44028 (248) obj. 2.9816e-13 iterations 253
Cbc0038I Pass   3: suminf.  109.87985 (232) obj. 9374.42 iterations 470
Cbc0038I Pass   4: suminf.   97.44028 (248) obj. 8941.82 iterations 294
Cbc0038I Pass   5: suminf.   86.65814 (243) obj. 9588.23 iterations 161
Cbc0038I Pass   6: suminf.   83.09196 (233) obj. 9946.52 iterations 127
Cbc0038I Pass   7: suminf.   18.36147 (194) obj. 11692.9 iterations 203
Cbc0038I Pass   8: suminf.   16.56318 (175) obj. 11875.4 iterations 226
Cbc0038I Pass   9: suminf.   12.90186 (175) obj. 12157.1 iterations 94
Cbc0038I Pass  10: suminf.   12.68069 (172) obj. 12179.6 iterations 76
Cbc0038I Pass  11: suminf.    7.52916 (54) obj. 13233 iterations 169
Cbc0038I Pass  12: suminf.    4.18011 (167) obj. 13010.4 iterations 173
Cbc0038I Pass  13: suminf.    8.07698 (41) obj. 13388.9 iterations 138
Cbc0038I Pass  14: suminf.    0.94061 (37) obj. 22875.2 iterations 355
Cbc0038I Pass  15: suminf.    0.58839 (165) obj. 22872.8 iterations 149
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 23279.9 iterations 303
Cbc0038I Solution found of 23279.9
Cbc0038I Rounding solution of 4731.38 is better than previous of 23279.9

Cbc0038I Before mini branch and bound, 384 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1355 rows 925 columns, reduced to 1355 rows 541 columns - 97 fixed gives 865, 366 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of 4258.24
Cbc0038I Pass  17: suminf.   97.44028 (248) obj. 0 iterations 0
Cbc0038I Pass  18: suminf.   97.44028 (248) obj. -2.25135e-13 iterations 240
Cbc0038I Pass  19: suminf.  108.13717 (249) obj. 4258.24 iterations 467
Cbc0038I Pass  20: suminf.   97.44028 (248) obj. 4214.68 iterations 245
Cbc0038I Pass  21: suminf.   97.80202 (265) obj. 4258.24 iterations 194
Cbc0038I Pass  22: suminf.  107.91789 (248) obj. 4258.24 iterations 323
Cbc0038I Pass  23: suminf.   97.66442 (248) obj. 4258.24 iterations 196
Cbc0038I Pass  24: suminf.   97.66442 (248) obj. 4258.24 iterations 146
Cbc0038I Pass  25: suminf.   90.72035 (234) obj. 4258.24 iterations 329
Cbc0038I Pass  26: suminf.   78.44947 (230) obj. 4258.24 iterations 198
Cbc0038I Pass  27: suminf.   78.44947 (230) obj. 4258.24 iterations 83
Cbc0038I Pass  28: suminf.   90.47551 (234) obj. 4258.24 iterations 229
Cbc0038I Pass  29: suminf.   78.82529 (232) obj. 4258.24 iterations 158
Cbc0038I Pass  30: suminf.   78.82529 (232) obj. 4258.24 iterations 78
Cbc0038I Pass  31: suminf.   91.18147 (231) obj. 4258.24 iterations 237
Cbc0038I Pass  32: suminf.   78.73083 (232) obj. 4258.24 iterations 201
Cbc0038I Pass  33: suminf.   78.73083 (232) obj. 4258.24 iterations 94
Cbc0038I Pass  34: suminf.   79.18868 (235) obj. 4258.24 iterations 223
Cbc0038I Pass  35: suminf.   79.18868 (235) obj. 4258.24 iterations 141
Cbc0038I Pass  36: suminf.   79.18868 (235) obj. 4258.24 iterations 87
Cbc0038I Pass  37: suminf.   90.94983 (236) obj. 4258.24 iterations 179
Cbc0038I Pass  38: suminf.   79.99155 (236) obj. 4258.24 iterations 157
Cbc0038I Pass  39: suminf.   79.99155 (236) obj. 4258.24 iterations 70
Cbc0038I Pass  40: suminf.  108.02061 (249) obj. 4258.24 iterations 209
Cbc0038I Pass  41: suminf.   97.76374 (249) obj. 4258.24 iterations 154
Cbc0038I Pass  42: suminf.   97.76374 (249) obj. 4258.24 iterations 99
Cbc0038I Pass  43: suminf.  108.59457 (249) obj. 4258.24 iterations 204
Cbc0038I Pass  44: suminf.   97.44028 (248) obj. 4242.4 iterations 181
Cbc0038I Pass  45: suminf.   97.63318 (261) obj. 4258.24 iterations 129
Cbc0038I Pass  46: suminf.  108.06080 (249) obj. 4258.24 iterations 246
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 501 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I After 0.41 seconds - Feasibility pump exiting with objective of 4731.38 - took 0.38 seconds
Cbc0012I Integer solution of 4731.3825 found by feasibility pump after 0 iterations and 0 nodes (0.41 seconds)
Cbc0038I Full problem 1355 rows 925 columns, reduced to 1355 rows 296 columns - 136 fixed gives 847, 160 - still too large
Cbc0038I Full problem 1355 rows 925 columns, reduced to 847 rows 160 columns - too large
Cbc0031I 5 added rows had average density of 390
Cbc0013I At root node, 5 cuts changed objective from 0 to 183.50964 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 16 row cuts average 395.2 elements, 0 column cuts (0 active)  in 0.281 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 4731.3825 best solution, best possible 183.50964 (1.84 seconds)
Cbc0012I Integer solution of 3513.0914 found by DiveCoefficient after 998 iterations and 1 nodes (1.91 seconds)
Cbc0012I Integer solution of 3513.0914 found by heuristic after 841 iterations and 0 nodes (2.07 seconds)
Cbc0012I Integer solution of 2739.8914 found by DiveCoefficient after 1440 iterations and 4 nodes (2.39 seconds)
Cbc0012I Integer solution of 3328.595 found by DiveCoefficient after 1396 iterations and 4 nodes (2.49 seconds)
Cbc0012I Integer solution of 2739.8914 found by heuristic after 1384 iterations and 4 nodes (2.64 seconds)
Cbc0012I Integer solution of 2434.4249 found by DiveCoefficient after 2257 iterations and 10 nodes (3.19 seconds)
Cbc0012I Integer solution of 2434.4249 found by heuristic after 2661 iterations and 15 nodes (3.19 seconds)
Cbc0012I Integer solution of 2121.6332 found by heuristic after 30700 iterations and 297 nodes (4.66 seconds)
Cbc0030I Thread 0 used 54 times,  waiting to start 0.87965178,  255 locks, 0.0015890598 locked, 8.4161758e-05 waiting for locks
Cbc0030I Thread 1 used 44 times,  waiting to start 1.1624784,  206 locks, 0.0015287399 locked, 0.00010871887 waiting for locks
Cbc0030I Thread 2 used 44 times,  waiting to start 2.2084384,  203 locks, 0.0020554066 locked, 0.0016071796 waiting for locks
Cbc0030I Thread 3 used 20 times,  waiting to start 2.397877,  98 locks, 0.0098257065 locked, 0.0038788319 waiting for locks
Cbc0030I Thread 4 used 39 times,  waiting to start 2.4071822,  191 locks, 0.0011022091 locked, 0.00016117096 waiting for locks
Cbc0030I Thread 5 used 33 times,  waiting to start 2.3621852,  156 locks, 0.0041508675 locked, 0.00022649765 waiting for locks
Cbc0030I Thread 6 used 29 times,  waiting to start 2.6936381,  138 locks, 0.00088000298 locked, 0.0046880245 waiting for locks
Cbc0030I Thread 7 used 31 times,  waiting to start 2.4399464,  145 locks, 0.00070810318 locked, 0.00023603439 waiting for locks
Cbc0030I Thread 8 used 32 times,  waiting to start 2.6989698,  159 locks, 0.00091075897 locked, 0.0024709702 waiting for locks
Cbc0030I Thread 9 used 27 times,  waiting to start 2.9838793,  128 locks, 0.00058436394 locked, 0.0005106926 waiting for locks
Cbc0030I Thread 10 used 38 times,  waiting to start 2.6678023,  184 locks, 0.00084090233 locked, 0.00041604042 waiting for locks
Cbc0030I Thread 11 used 22 times,  waiting to start 2.9944341,  110 locks, 0.00040626526 locked, 0.0007815361 waiting for locks
Cbc0030I Main thread 3.6784198 waiting for threads,  844 locks, 0.0002348423 locked, 0.0039784908 waiting for locks
Cbc0001I Search completed - best objective 2121.6332, took 47841 iterations and 413 nodes (7.79 seconds)
Cbc0032I Strong branching done 6724 times (460237 iterations), fathomed 44 nodes and fixed 11 variables
Cbc0035I Maximum depth 14, 14850 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 183.51
Probing was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Gomory was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.192 seconds)
Knapsack was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.090 seconds)
Clique was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
MixedIntegerRounding2 was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.139 seconds)
FlowCover was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 65 times and created 208 cuts of which 0 were active after adding rounds of cuts (3.649 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)

Result - Optimal solution found

Objective value:                2121.63320000
Enumerated nodes:               413
Total iterations:               47841
Time (CPU seconds):             31.07
Time (Wallclock seconds):       7.80

Option for printingOptions changed from normal to all
Total time (CPU seconds):       31.07   (Wallclock seconds):       7.81

